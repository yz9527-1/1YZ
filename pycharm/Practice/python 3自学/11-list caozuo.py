# 列表操作

x = [5, 6, 2, 1, 6, 7, 2, 7, 9]

# append()方法，就是在列表尾部添加元素
x.append(2)
print(x)

# insert(开始位置，插入的值),插入一个元素到指定位置
x.insert(2, 99)  # 2是索引,表示这个元素要放什么位置，99是插入的元
print(x)

# 删除元素 remove()
x.remove(2)  # 这个2是指一个元素不是索引，如果多个，默认移除第一个
print(x)

x.remove(x[2])  # 根据索引，直接移除索引对应的元素
print(x)

# pop(),移除列表尾部最后一个元素
x.pop()
print(x)

# 列表引用
print(x[0:5])  # 相当于一个范围，从左边索引到右边索引，但是不包括右边索引

# -1 索引代表最后一个元素，-2代表倒数第二个
# 此时x= [5, 6, 1, 6, 7, 2, 7, 9]
print(x[-1])
print(x[-2])

# 查找某一个元素的索引值，一下1的索引应该是2
print(x.index(1))

# 计算某一个元素出现的次数
print(x.count(6))  # 元素6出现了2次

# 排序,默认从小到大
x.sort()
print(x)

# 字母排序
y = ['Janet', 'Jessy', 'Anthony', 'Tom', 'Alice', 'Bob']
y.sort()
print(y)

# 多维列表

x = [[5, 6], [6, 7], [7, 2], [2, 5], [4, 9]]
print(x)

# 根据索引引用列表元素,例如打印【6,7】
print(x[1])
# 打印【6,7】中的7
print(x[1][1])

# 三维
y = [[[5, 7], [6, 6]], [[6, 6], [7, 8]], [7, 2], [2, 5]]
# 打印[[6,6],[7,8]]这个部分中的[6,6]里的第一个6
print(y[1][0][0])
# y看起来有的晕，我们换一个写法

y = [
    [[5, 7], [6, 6]],
    [[6, 6], [7, 8]],
    [7, 2],
    [2, 5]
]
# 这样稍微清晰，一点，Y有4个元素，前面两个是两两二维组成，后面两个是单独的二维